#define ZMK_POINTING_DEFAULT_MOVE_VAL 1000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

&lt {
    quick-tap-ms = <200>;
    tapping-term-ms = <150>;
    flavor = "balanced";
};

&mt { quick-tap-ms = <200>; };

/ {
    behaviors {
        thumb_ht: thumb_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            hold-trigger-key-positions = <0 1 2 3 4 14 10 11 12 13 14 20 21 22 23 24 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
        };

        hml: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <220>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33>;
            hold-trigger-on-release;
        };

        hmr: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <220>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
            hold-trigger-on-release;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            require-prior-idle-ms = <100>;
        };
    };

    macros {
        thin_arrow: thin_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "THIN_ARROW";
        };

        thick_arrow: thick_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "THICK_ARROW";
        };

        rs_lambda_macro: rs_lambda_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp PIPE &kp LEFT>;
            label = "RS_LAMBDA_MACRO";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo1 {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 3>;
        };

        combo2 {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <6 7>;
        };

        combo3 {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <12 13>;
        };

        combo4 {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        combo5 {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <22 23>;
        };

        combo6 {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <26 27>;
        };

        combo7 {
            bindings = <&kp BSLH>;
            key-positions = <4 5>;
        };

        combo8 {
            bindings = <&kp PIPE>;
            key-positions = <14 15>;
        };

        combo9 {
            bindings = <&kp ENTER>;
            key-positions = <18 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEF";
            bindings = <
  &kp Q            &kp W            &kp E         &kp R              &kp T      &kp Y        &kp U               &kp I         &kp O            &kp P
  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LCTRL D  &hml LEFT_SHIFT F  &kp G      &kp H        &hmr RIGHT_SHIFT J  &hmr RCTRL K  &hmr LEFT_ALT L  &hmr RIGHT_GUI SEMICOLON
  &kp Z            &kp X            &kp C         &kp V              &kp B      &kp N        &kp M               &kp COMMA     &kp DOT          &as LS(SLASH) SLASH
                                                  &lt 1 SPACE        &kp TAB    &lt 3 RCTRL  &lt 2 BACKSPACE
            >;
        };

        arrows+braces {
            bindings = <
  &kp NUMBER_1            &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5     &kp NUMBER_6  &kp N7           &kp N8         &kp N9            &kp N0
  &hml LCTRL EXCLAMATION  &kp LALT      &kp LGUI      &kp LC(F5)    &kp F12    &kp MINUS     &kp EQUAL        &kp GRAVE      &trans            &kp APOSTROPHE
  &kp CARET               &kp DOLLAR    &kp AT        &trans        &trans     &kp PIPE      &kp COLON        &kp LESS_THAN  &kp GREATER_THAN  &kp GRAVE
                                                      &trans        &trans     &trans        &kp RIGHT_SHIFT
            >;
        };

        numbers+symbols {
            bindings = <
  &kp PLUS                    &kp MINUS               &kp EQUAL                   &kp UNDERSCORE            &kp STAR           &trans  &trans          &kp UP_ARROW  &kp PERCENT  &trans
  &hml LEFT_CONTROL NUMBER_1  &hml LEFT_ALT NUMBER_2  &hml LEFT_COMMAND NUMBER_3  &hml LEFT_SHIFT NUMBER_4  &kp NUMBER_5       &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT    &kp RIGHT_CONTROL
  &kp NUMBER_6                &kp NUMBER_7            &kp NUMBER_8                &kp NUMBER_9              &kp EXCLAMATION    &trans  &trans          &trans        &trans       &trans
                                                                                  &trans                    &kp NUMBER_0       &trans  &trans
            >;
        };

        funtions-btns-sys {
            bindings = <
  &kp F11  &kp F12  &trans  &trans  &trans     &sys_reset   &trans        &trans        &trans        &bt BT_CLR
  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans
  &kp F6   &kp F7   &kp F8  &kp F9  &trans     &kp K_LOCK   &trans        &trans        &trans        &trans
                            &trans  &kp F10    &trans       &trans
            >;
        };

        media_and_mouse {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &msc SCRL_UP    &kp C_VOLUME_UP  &kp K_MUTE        &kp C_VOL_DN     &kp C_BRIGHTNESS_INC
  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN   &mmv MOVE_UP      &mmv MOVE_RIGHT  &kp C_BRIGHTNESS_AUTO
  &trans  &trans  &trans  &trans  &trans    &msc SCRL_DOWN  &kp C_PREV       &kp C_PLAY_PAUSE  &kp C_NEXT       &kp C_BRIGHTNESS_DEC
                          &trans  &trans    &mkp LCLK       &mkp RCLK
            >;
        };

        system_danger {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &sys_reset   &bt BT_DISC 0   &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_CLR
  &trans  &trans  &trans  &trans  &trans    &bootloader  &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2   &trans
  &trans  &trans  &trans  &trans  &trans    &soft_off    &trans          &trans         &trans         &bt BT_CLR_ALL
                          &trans  &trans    &trans       &studio_unlock
            >;
        };
    };
};
