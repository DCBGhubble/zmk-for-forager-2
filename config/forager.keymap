#define ZMK_POINTING_DEFAULT_MOVE_VAL 1000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/ {
    combos {
        compatible = "zmk,combos";

        COMBTclear {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <0 9>;
            layers = <0 2>;
        };

        Lock {
            bindings = <&kp RC(RA(DELETE))>;
            key-positions = <6 7 8>;
            layers = <0>;
        };

        Boot {
            bindings = <&bootloader>;
            key-positions = <1 2 4 3>;
        };

        ESCombo {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2 3>;
        };
    };

    behaviors {
        BackDEL: BackDEL {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKDEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        LHRm: LHRm {
            compatible = "zmk,behavior-hold-tap";
            label = "LHRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
            flavor = "tap-preferred";
        };

        RHRm: RHRm {
            compatible = "zmk,behavior-hold-tap";
            label = "RHRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
            flavor = "tap-preferred";
        };

        Modsemi: Modsemi {
            compatible = "zmk,behavior-mod-morph";
            label = "MODSEMI";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        modcolon: modcolon {
            compatible = "zmk,behavior-mod-morph";
            label = "MODCOLON";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEF";
            bindings = <
  &LHRm LEFT_ALT Q  &kp W  &kp E                 &kp R               &kp T        &kp Y      &kp U                &kp I                  &kp O      &kp SQT
  &kp A             &kp S  &LHRm LEFT_CONTROL D  &LHRm LEFT_SHIFT F  &lt 1 G      &lt 1 H    &RHRm RIGHT_SHIFT J  &RHRm RIGHT_CONTROL K  &kp L      &kp P
  &kp Z             &kp X  &lt 2 C               &kp V               &kp B        &kp N      &kp M                &Modsemi               &modcolon  &kp SLASH
                                                 &kp TAB             &kp SPACE    &kp ENTER  &BackDEL
            >;
        };

        numsym {
            bindings = <
  &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp AT_SIGN     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp ASTRK   &none        &none
  &none  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS    &kp EQUAL    &kp APOSTROPHE
  &none  &kp N7        &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &kp EXCLAMATION       &kp QUESTION           &kp DOLLAR  &kp PERCENT  &none
                                     &trans        &trans          &trans                &trans
            >;
        };

        arrows {
            bindings = <
  &none  &none             &none  &none           &none     &trans         &kp HOME        &kp UP_ARROW  &kp END    &trans
  &none  &none             &none  &none           &none     &kp LC(LA(H))  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &none
  &none  &kp LEFT_CONTROL  &none  &kp LEFT_SHIFT  &none     &trans         &none           &none         &trans     &trans
                                  &trans          &trans    &trans         &trans
            >;
        };

        funtions-btns-sys {
            bindings = <
  &kp F11  &kp F12  &trans  &trans  &trans     &sys_reset   &trans        &trans        &trans        &bt BT_CLR
  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans
  &kp F6   &kp F7   &kp F8  &kp F9  &trans     &none        &trans        &trans        &trans        &trans
                            &trans  &kp F10    &trans       &trans
            >;
        };

        media_and_mouse {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &msc SCRL_UP    &kp C_VOLUME_UP  &kp K_MUTE        &kp C_VOL_DN     &kp C_BRIGHTNESS_INC
  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN   &mmv MOVE_UP      &mmv MOVE_RIGHT  &kp C_BRIGHTNESS_AUTO
  &trans  &trans  &trans  &trans  &trans    &msc SCRL_DOWN  &kp C_PREV       &kp C_PLAY_PAUSE  &kp C_NEXT       &kp C_BRIGHTNESS_DEC
                          &trans  &trans    &mkp LCLK       &mkp RCLK
            >;
        };

        system_danger {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &sys_reset   &bt BT_DISC 0   &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_CLR
  &trans  &trans  &trans  &trans  &trans    &bootloader  &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2   &trans
  &trans  &trans  &trans  &trans  &trans    &soft_off    &trans          &trans         &trans         &bt BT_CLR_ALL
                          &trans  &trans    &trans       &studio_unlock
            >;
        };
    };
};
